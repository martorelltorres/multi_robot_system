# ---------------------------------------------------------
#             MULTI ROBOT SYSTEM CONFIGURATION FILE            
# ---------------------------------------------------------

# ------------------ ROBOTS INFO -----------------------
number_of_robots: 4 
# be sure that all the simulated architectures has the same NED origin 

# Andratx exterior
ned_origin_lat: 39.543330
ned_origin_lon: 2.377940

# ------------------ AREA PARTITION -----------------------
# Exploration area
exploration_area: "/home/uib/MRS_ws/src/MRS_stack/multi_robot_system/missions/230210085906_cabrera_small.xml"
# exploration_area: "/home/uib/MRS_ws/src/MRS_stack/multi_robot_system/missions/230606090038_cabrera_nano.xml"
# exploration_area: "/home/uib/MRS_ws/src/MRS_stack/multi_robot_system/missions/230606123946_square.xml"


# The offset_polygon_distance set the offset distance in order to ensure an enought coverage area between the polygons
offset_polygon_distance: 5
# The offset_coverage_distance set the distance between the coverage lines path
offset_coverage_distance: 15
# Section strategy parameters
surge_velocity: 0.5
tolerance: 2

# ------------------ DUSTBIN ROBOT -----------------------
dutsbin_timer: 50

# ------------------ AUV's TASK ALLOCATION -----------------------
task_allocation: 1

#Task allocation strategies

# 1 Split the tasks depending of the number of robots
#  Divide the tasks between the number of robots and assign tasks to each robot
#  example:Tasks [0,1,2,3,4]-> r1_tasks[0,1,2], r2_tasks[3,4]

# 2 Assign non consecutive random tasks
# Assign the nearest polygon to the robot_0, and decide wich is the task for the robot_1. Tasks mustn't be consecutive.
# example:Tasks [0,1,2,3,4]-> r1_tasks[3,4,0], r2_tasks[1,2]

# 3 Hungarian algorithm



        